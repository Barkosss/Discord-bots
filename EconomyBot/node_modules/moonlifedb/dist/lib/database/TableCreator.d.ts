import { LocalStorage } from './adapters/LocalStorage';
import { ExternalConnection } from './adapters/ExternalConnection';
import { JSONFormatter } from './ConstructorExporter';
interface TableParameters {
    [index: string]: ('auto-increment' | 'snowflake' | 'empty' | 'boolean' | 'string' | 'number' | 'decimal' | 'decimal' | 'hex' | 'binary' | 'octal' | 'bigint' | 'unknown' | 'object' | 'array' | 'infinity' | 'any');
}
export declare class TableCreator {
    adapter: LocalStorage | ExternalConnection;
    useTabulation: JSONFormatter | undefined;
    tablePath: string;
    ip: string | undefined;
    port: string | undefined;
    /**
     * NOT SUPPORTED YET
     *
     * The class to work with tables
     * @example const creator = new TableCreator(adapter);
     * @param adapter
     */
    constructor(adapter: LocalStorage | ExternalConnection, options?: {
        useTabulation?: JSONFormatter | undefined;
    });
    /**
     * NOT SUPPORTED YET
     */
    create(name: string, settings?: {
        strict: TableParameters;
    } | undefined): void;
}
export {};
